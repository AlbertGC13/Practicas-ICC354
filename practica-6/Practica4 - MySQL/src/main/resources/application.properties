# MySQL Configuration
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:practica_mock}?allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username=${DB_USER:root}
spring.datasource.password=${DB_PASSWORD:password}

spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Hibernate & SQL
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.sql.init.mode=always


# Logging
logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE
logging.level.org.springframework.security=INFO

# H2 Console (you might want to disable this in production)
#spring.h2.console.enabled=false

# Security
security.user.name=${ADMIN_USER:admin}
security.user.password=${ADMIN_PASSWORD:admin}
security.user.role=USER,ADMIN

# Freemarker
spring.freemarker.settings.auto_import=/spring.ftl as spring
spring.freemarker.expose-session-attributes=true
spring.freemarker.suffix=.ftl

# JWT
token.jwt=${JWT_SECRET:71266gdb127HNJ761238jk98kjasdh12388123712737123asd12737}
token.tiempo=60

# JDBC Queries
query.user-jdbc=select username, password, activo from usuario where username=?
query.rol-jdbc=select u.username, r.role from usuario u inner join usuario_roles ur on(u.username=ur.usuario_username) inner join rol r on(ur.roles_role=r.role) where u.username=?

# Messages
spring.messages.basename=lang/messages

#REDIS SESSION
spring.session.store-type=redis # Session store type
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=6379
